2.1 db.products.find().count()
2.2 db.products.aggregate( [ { $group: { _id: null, totalValue: { $sum: "$price" } } } ] )
2.3a db.products.find().sort({ price: -1, name: 1 })
2.3b db.products.aggregate( [ { $sort : { price : -1, name: 1} } ] )
2.4 db.products.find({}).sort({name: 1}).limit(3)
2.5 db.products.aggregate([ { $group: { _id: null, lowestPrice: { $min: "$price" }, highestPrice: { $max: "$price" }, average: { $avg: "$price" } } } ])
2.6 db.products.find( { price: { $gt: 354} }).count()
2.7 db.products.aggregate([ { $group: { _id: "$category", count: { $sum: 1 } } } ])
2.8 db.products.aggregate([ { $match: { category: "construction" } }, { $sort: { price:  -1  } }, { $limit: 5 } ])
2.9 db.products.find({}).sort({name: -1}).skip(19).limit(1)
2.10 db.products.aggregate([ { $match: { category: "construction" } }, { $group: { _id: null, totalValue: { $sum: "$price" } } } ])



3.1 done
3.2(2.7) 6.000.000 documents tar 6200 millisekunder
          db.products.explain("executionStats").aggregate([ { $group: { _id: "$category", count: { $sum: 1 } } } ])
3.2(2.8) 6.000.000 documents tar 5317 millisekunder
          db.products.explain("executionStats").aggregate([ { $match: { category: "construction" } }, { $sort: { price:  -1  } }, { $limit: 5 } ])
3.2(2.9) 6.000.000 documents tar 9505 millisekunder
          db.products.explain("executionStats").find({}).sort({name: -1}).skip(19).limit(1)

3.3.a Jag förväntar mig att det ska gå snabbare
3.3.b Det gick mer än dubbelt så snabbt att köra med index
3.3.c Såg mest skillnad på compound index
      Utan index på pris tog 1800 millisek, med index 719 millisek.
      Utan Index på categori och pris tog 2609 millisek, med index 742 millisek.
3.3.d Nej.
